/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NFTMarketplace,
  NFTMarketplaceInterface,
} from "../../../contracts/Marketplace.sol/NFTMarketplace";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getListingItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarketplace.ListingItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listingItems",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isSold",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalListingItems",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611a19806101146000396000f3fe6080604052600436106100865760003560e01c80638da5cb5b116100595780638da5cb5b14610128578063be03120d14610153578063e59b967014610190578063e7fb74c7146101bb578063f2fde38b146101d757610086565b8063305a67a81461008b57806331e3a12e146100b4578063715018a6146100f557806389bfd38f1461010c575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610f5c565b610200565b005b3480156100c057600080fd5b506100db60048036038101906100d69190610f5c565b610424565b6040516100ec959493929190611015565b60405180910390f35b34801561010157600080fd5b5061010a6104a7565b005b61012660048036038101906101219190611094565b6104bb565b005b34801561013457600080fd5b5061013d610750565b60405161014a91906110e7565b60405180910390f35b34801561015f57600080fd5b5061017a60048036038101906101759190611102565b610779565b6040516101879190611295565b60405180910390f35b34801561019c57600080fd5b506101a5610a24565b6040516101b291906112b7565b60405180910390f35b6101d560048036038101906101d09190610f5c565b610a35565b005b3480156101e357600080fd5b506101fe60048036038101906101f991906112d2565b610c0d565b005b6000600360008381526020019081526020016000209050600015158160040160009054906101000a900460ff1615151461026f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102669061135c565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f8906113c8565b60405180910390fd5b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600001546040518463ffffffff1660e01b8152600401610366939291906113e8565b600060405180830381600087803b15801561038057600080fd5b505af1158015610394573d6000803e3d6000fd5b50505050600360008381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549060ff021916905550505050565b60036020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b6104af610c91565b6104b96000610d0f565b565b60026001541415610501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f89061146b565b60405180910390fd5b60026001819055506000811161054c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610543906114d7565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610589939291906113e8565b600060405180830381600087803b1580156105a357600080fd5b505af11580156105b7573d6000803e3d6000fd5b505050506040518060a001604052808381526020018473ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001600015158152506003600061061f6002610dd3565b81526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055509050506106fc6002610de1565b6107446040518060400160405280601781526020017f4c697374696e67206974656d207769746820696420257300000000000000000081525061073f6002610dd3565b610df7565b60018081905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060008310156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690611543565b60405180910390fd5b60008211610802576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f9906115af565b60405180910390fd5b600061080e6002610dd3565b838561081a91906115fe565b11610825578261083b565b836108306002610dd3565b61083a9190611654565b5b905060008111610880576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610877906116fa565b60405180910390fd5b60008167ffffffffffffffff81111561089c5761089b61171a565b5b6040519080825280602002602001820160405280156108d557816020015b6108c2610ec4565b8152602001906001900390816108ba5790505b50905060005b82811015610a18576003600087836108f391906115fe565b81526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff1615151515815250508282815181106109fa576109f9611749565b5b60200260200101819052508080610a1090611778565b9150506108db565b50809250505092915050565b6000610a306002610dd3565b905090565b6000600360008381526020019081526020016000209050600015158160040160009054906101000a900460ff16151514610aa4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9b9061135c565b60405180910390fd5b34816003015414610aea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae19061180d565b60405180910390fd5b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600001546040518463ffffffff1660e01b8152600401610b4f939291906113e8565b600060405180830381600087803b158015610b6957600080fd5b505af1158015610b7d573d6000803e3d6000fd5b5050505060018160040160006101000a81548160ff0219169083151502179055508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610c08573d6000803e3d6000fd5b505050565b610c15610c91565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7c9061189f565b60405180910390fd5b610c8e81610d0f565b50565b610c99610e93565b73ffffffffffffffffffffffffffffffffffffffff16610cb7610750565b73ffffffffffffffffffffffffffffffffffffffff1614610d0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d049061190b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b6001816000016000828254019250508190555050565b610e8f8282604051602401610e0d9291906119b3565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610e9b565b5050565b600033905090565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518060a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b600080fd5b6000819050919050565b610f3981610f26565b8114610f4457600080fd5b50565b600081359050610f5681610f30565b92915050565b600060208284031215610f7257610f71610f21565b5b6000610f8084828501610f47565b91505092915050565b610f9281610f26565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fc382610f98565b9050919050565b610fd381610fb8565b82525050565b6000610fe482610f98565b9050919050565b610ff481610fd9565b82525050565b60008115159050919050565b61100f81610ffa565b82525050565b600060a08201905061102a6000830188610f89565b6110376020830187610fca565b6110446040830186610feb565b6110516060830185610f89565b61105e6080830184611006565b9695505050505050565b61107181610fb8565b811461107c57600080fd5b50565b60008135905061108e81611068565b92915050565b6000806000606084860312156110ad576110ac610f21565b5b60006110bb8682870161107f565b93505060206110cc86828701610f47565b92505060406110dd86828701610f47565b9150509250925092565b60006020820190506110fc6000830184610fca565b92915050565b6000806040838503121561111957611118610f21565b5b600061112785828601610f47565b925050602061113885828601610f47565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61117781610f26565b82525050565b61118681610fb8565b82525050565b61119581610fd9565b82525050565b6111a481610ffa565b82525050565b60a0820160008201516111c0600085018261116e565b5060208201516111d3602085018261117d565b5060408201516111e6604085018261118c565b5060608201516111f9606085018261116e565b50608082015161120c608085018261119b565b50505050565b600061121e83836111aa565b60a08301905092915050565b6000602082019050919050565b600061124282611142565b61124c818561114d565b93506112578361115e565b8060005b8381101561128857815161126f8882611212565b975061127a8361122a565b92505060018101905061125b565b5085935050505092915050565b600060208201905081810360008301526112af8184611237565b905092915050565b60006020820190506112cc6000830184610f89565b92915050565b6000602082840312156112e8576112e7610f21565b5b60006112f68482850161107f565b91505092915050565b600082825260208201905092915050565b7f4974656d20697320616c726561647920736f6c64000000000000000000000000600082015250565b60006113466014836112ff565b915061135182611310565b602082019050919050565b6000602082019050818103600083015261137581611339565b9050919050565b7f4f6e6c792073656c6c65722063616e2063616e63656c206c697374696e670000600082015250565b60006113b2601e836112ff565b91506113bd8261137c565b602082019050919050565b600060208201905081810360008301526113e1816113a5565b9050919050565b60006060820190506113fd6000830186610fca565b61140a6020830185610fca565b6114176040830184610f89565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611455601f836112ff565b91506114608261141f565b602082019050919050565b6000602082019050818103600083015261148481611448565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e203000000000600082015250565b60006114c1601c836112ff565b91506114cc8261148b565b602082019050919050565b600060208201905081810360008301526114f0816114b4565b9050919050565b7f6f6666736574206d7573742062652067726561746572207468616e2030000000600082015250565b600061152d601d836112ff565b9150611538826114f7565b602082019050919050565b6000602082019050818103600083015261155c81611520565b9050919050565b7f6c696d6974206d7573742062652067726561746572207468616e203000000000600082015250565b6000611599601c836112ff565b91506115a482611563565b602082019050919050565b600060208201905081810360008301526115c88161158c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061160982610f26565b915061161483610f26565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611649576116486115cf565b5b828201905092915050565b600061165f82610f26565b915061166a83610f26565b92508282101561167d5761167c6115cf565b5b828203905092915050565b7f726573756c74206c656e677468206d757374206265206772656174657220746860008201527f616e203000000000000000000000000000000000000000000000000000000000602082015250565b60006116e46024836112ff565b91506116ef82611688565b604082019050919050565b60006020820190508181036000830152611713816116d7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061178382610f26565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117b6576117b56115cf565b5b600182019050919050565b7f5072696365206973206e6f7420636f7272656374000000000000000000000000600082015250565b60006117f76014836112ff565b9150611802826117c1565b602082019050919050565b60006020820190508181036000830152611826816117ea565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006118896026836112ff565b91506118948261182d565b604082019050919050565b600060208201905081810360008301526118b88161187c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006118f56020836112ff565b9150611900826118bf565b602082019050919050565b60006020820190508181036000830152611924816118e8565b9050919050565b600081519050919050565b60005b83811015611954578082015181840152602081019050611939565b83811115611963576000848401525b50505050565b6000601f19601f8301169050919050565b60006119858261192b565b61198f81856112ff565b935061199f818560208601611936565b6119a881611969565b840191505092915050565b600060408201905081810360008301526119cd818561197a565b90506119dc6020830184610f89565b939250505056fea26469706673582212204ba9b0df2e44d4ddf5af59487bc6bdabef3e9a29b9019c706fb69cb05fef9e6264736f6c63430008090033";

type NFTMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarketplace__factory extends ContractFactory {
  constructor(...args: NFTMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarketplace> {
    return super.deploy(overrides || {}) as Promise<NFTMarketplace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarketplace {
    return super.attach(address) as NFTMarketplace;
  }
  override connect(signer: Signer): NFTMarketplace__factory {
    return super.connect(signer) as NFTMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketplaceInterface {
    return new utils.Interface(_abi) as NFTMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarketplace {
    return new Contract(address, _abi, signerOrProvider) as NFTMarketplace;
  }
}
